<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Instagram Scraper" Id="InstagramScraper" Category="Social" RequireVersion="9.5.1" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Instagramscraper.xml">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

	<!--
	https://github.com/MohanSha/InstagramResearch
	-->

	<RestConnector Title="Account Lookup" Id="AccountLookupUsername" Group="Accounts">
    <Parameters>
      <Text Id="User" Title="Username or User URL" Required="true" Debug.DefaultValue="zaralarsson"/>
    </Parameters>
		<Fetch Url="https://www.instagram.com/@(FetchUsernameString())/?__a=1"/>
    <Parse>
			<JsonPath Expr="graphql.user.edge_followed_by.count" Id="Followers" Title="Followers" Converter="Int"/>
			<JsonPath Expr="graphql.user.edge_follow.count" Id="Follows" Title="Follows" Converter="Int"/>
			<JsonPath Expr="graphql.user.edge_owner_to_timeline_media.count" Id="Posts" Title="Posts" Converter="Int"/>
			<JsonPath Expr="graphql.user.id" Id="UserId" Title="User Id"/>
			<JsonPath Expr="graphql.user.username" Id="Username" Title="Username"/>
			<JsonPath Expr="graphql.user.full_name" Id="FullName" Title="Full Name"/>
			<JsonPath Expr="graphql.user.biography" Id="Bio" Title="Bio"/>
			<JsonPath Expr="graphql.user.overall_category_name" Id="Category" Title="Category"/>
			<JsonPath Expr="graphql.user.connected_fb_page" Id="FacebookPage" Title="Facebook Page"/>
			<JsonPath Expr="graphql.user.external_url" Id="ExternalUrl" Title="External URL"/>
			<JsonPath Expr="graphql.user.profile_pic_url" Id="Avatar" Title="Avatar"/>
			<JsonPath Expr="graphql.user.is_business_account" Id="BusinessAccount" Title="Business Account" Converter="Bool"/>
			<JsonPath Expr="graphql.user.is_verified" Id="Verified" Title="Verified" Converter="Bool"/>
    </Parse>
  </RestConnector>

  <RestConnector Id="PostLookup" Title="Post Lookup" Group="Posts">
    <Parameters>
      <Text Id="Post" Title="Post URL or Shortcode" Required="true" Debug.DefaultValue="https://www.instagram.com/p/CBVJMV1iHsd/"/>
    </Parameters>
    <Fetch Url="https://www.instagram.com/p/@(FetchPostString())/?__a=1"/>
    <Parse>
			<Compute Expr="https://www.instagram.com/p/@(Model.Inp)" Id="Url" Title="URL" DefaultValue="">
				<JsonPath Expr="$.graphql.shortcode_media.shortcode" Id="Inp" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="graphql.shortcode_media.taken_at_timestamp" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
			<JsonPath Expr="graphql.shortcode_media.edge_media_to_caption.edges[0].node.text" Id="Caption" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.edge_media_preview_like.count" Id="Likes" Title="Likes" Converter="Int"/>
			<JsonPath Expr="graphql.shortcode_media.edge_media_preview_comment.count" Id="Comments" Converter="Long"/>
			<JsonPath Expr="graphql.shortcode_media.video_view_count" Id="VideoViews" Title="Video Views" Converter="Auto" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.video_duration" Id="VideoDuration" Title="Video Duration" Converter="Auto" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.dimensions.height" Id="Height" Converter="Long"/>
			<JsonPath Expr="graphql.shortcode_media.dimensions.width" Id="Width" Converter="Long"/>
			<Compute Expr="@GetPostType()" Id="Type" Title="Type">
				<JsonPath Expr="graphql.shortcode_media.__typename" Id="Inp" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="graphql.shortcode_media.display_resources[0].src" Id="ImageUrl" Title="Thumbnail" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.owner.id" Id="UserId" Title="User Id"/>
			<JsonPath Expr="graphql.shortcode_media.owner.username" Id="Username" Title="Username"/>
			<Compute Expr="https://www.instagram.com/@(Model.Inp)/" Id="UserUrl" Title="User URL" DefaultValue="">
				<JsonPath Expr="graphql.shortcode_media.owner.username" Id="Inp"/>
			</Compute>
			<JsonPath Expr="graphql.shortcode_media.owner.full_name" Id="FullName" Title="Full Name"/>
			<JsonPath Expr="graphql.shortcode_media.owner.edge_followed_by.count" Id="Followers" Title="Followers" Converter="Int"/>
			<JsonPath Expr="graphql.shortcode_media.owner.profile_pic_url" Id="Avatar" Title="Avatar" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.location.name" Id="Locality" Title="Location" DefaultValue=""/>
			<Regex Expr="&quot;country_code\\&quot;:\s\\&quot;(.*?)\\&quot;" Id="Country" Title="Country" Group="1" Converter="String" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.location.id" Id="LocationId" Title="Location Id" DefaultValue=""/>
			<JsonPath Expr="graphql.shortcode_media.edge_media_to_sponsor_user.edges[0].node.sponsor.username" Id="Sponsor" Title="Sponsor" DefaultValue=""/>
	</Parse>
  </RestConnector>

  <RestConnector Id="HashtagFeed" Title="Hashtag Post Feed" Group="Hashtags">
    <Parameters>
      <Text Id="Hashtag" Title="Hashtag" Required="true" Debug.DefaultValue="summer"/>
    </Parameters>
    <Paging PageSize="70" EvenPages="false">
      <Parse>
				<JsonPath Expr="$.graphql.hashtag.edge_hashtag_to_media.page_info.end_cursor" Id="Cursor"/>
				<JsonPath Expr="$.graphql.hashtag.edge_hashtag_to_media.page_info.has_next_page" Id="HasNextPage" Converter="Bool" DefaultValue="false"/>
      </Parse>
    </Paging>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/explore/tags/@(StripHashtag())/?__a=1
				@((Model.PageCursor.Page != 0 && Model.HasNextPage) ? "&max_id=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.graphql.hashtag.edge_hashtag_to_media.edges[*].node">
				<Compute Expr="https://www.instagram.com/p/@Model.Inp" Id="Url" Title="URL">
					<JsonPath Expr="shortcode" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="taken_at_timestamp" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
				<JsonPath Expr="edge_media_to_caption.edges[0].node.text" Id="Caption" DefaultValue=""/>
				<Compute Expr="@GetPostType()" Id="Type" Title="Type">
					<JsonPath Expr="__typename" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="edge_liked_by.count" Id="Likes" Converter="Long"/>
				<JsonPath Expr="edge_media_to_comment.count" Id="Comments" Converter="Long"/>
				<JsonPath Expr="video_view_count" Id="VideoViews" Title="Video Views" Converter="Auto" DefaultValue=""/>
				<JsonPath Expr="dimensions.height" Id="Height" Converter="Long"/>
				<JsonPath Expr="dimensions.width" Id="Width" Converter="Long"/>
				<JsonPath Expr="display_url" Id="DisplayUrl" Title="Display URL"/>
				<JsonPath Expr="thumbnail_src" Id="ImageUrl" Title="Thumbnail"/>
				<JsonPath Expr="owner.id" Id="OwnerId" Converter="String"/>
			</JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="HashtagTopPosts" Title="Top Posts" Group="Hashtags">
    <Parameters>
      <Text Id="Hashtag" Title="Hashtag" Required="true" Debug.DefaultValue="summer"/>
    </Parameters>
    <Paging PageSize="10" MaxTake="10"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/explore/tags/@(StripHashtag())/?__a=1
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.graphql.hashtag.edge_hashtag_to_top_posts.edges[*].node">
				<Compute Expr="https://www.instagram.com/p/@Model.Inp" Id="Url" Title="URL">
					<JsonPath Expr="shortcode" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="taken_at_timestamp" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
				<JsonPath Expr="edge_media_to_caption.edges[0].node.text" Id="Caption" DefaultValue=""/>
				<Compute Expr="@GetPostType()" Id="Type" Title="Type">
					<JsonPath Expr="__typename" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="edge_liked_by.count" Id="Likes" Converter="Long"/>
				<JsonPath Expr="edge_media_to_comment.count" Id="Comments" Converter="Long"/>
				<JsonPath Expr="video_view_count" Id="VideoViews" Title="Video Views" Converter="Auto" DefaultValue=""/>
				<JsonPath Expr="dimensions.height" Id="Height" Converter="Long"/>
				<JsonPath Expr="dimensions.width" Id="Width" Converter="Long"/>
				<JsonPath Expr="display_url" Id="DisplayUrl" Title="Display URL"/>
				<JsonPath Expr="thumbnail_src" Id="ImageUrl" Title="Thumbnail"/>
				<JsonPath Expr="owner.id" Id="OwnerId" Converter="String"/>
			</JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="RelatedHashtags" Title="Related Hashtags" Group="Hashtags">
    <Parameters>
      <Text Id="Hashtag" Title="Hashtag" Required="true" Debug.DefaultValue="summer"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/explore/tags/@(StripHashtag())/?__a=1
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.graphql.hashtag.edge_hashtag_to_related_tags.edges[*].node">
				<JsonPath Expr="name" Id="Name" Converter="String" DefaultValue=""/>
			</JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="HashtagCount" Title="Post Count" Group="Hashtags">
    <Parameters>
      <Text Id="Hashtag" Title="Hashtag" Required="true" Debug.DefaultValue="summer"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/explore/tags/@(StripHashtag())/?__a=1
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
			<JsonPath Expr="$.graphql.hashtag.edge_hashtag_to_media.count" Id="Count" Converter="Long" DefaultValue="0"/>
    </Parse>
  </RestConnector>

  <RestConnector Id="AccountSearch" Title="Search for Accounts" Group="Accounts">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Debug.DefaultValue="zaralarsson"/>
    </Parameters>
    <Paging PageSize="100" MaxTake="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/web/search/topsearch/?context=user&query=@Utils.UrlEncode(Model.Query)
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.users[*].user">
				<Compute Expr="https://www.instagram.com/@Model.Inp" Id="Url" Title="URL">
					<JsonPath Expr="username" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="username" Id="Username" Converter="String"/>
				<JsonPath Expr="pk" Id="UserId" Title="User Id" Converter="String"/>
				<JsonPath Expr="full_name" Id="FullName" Title="Full Name" Converter="String"/>
				<JsonPath Expr="is_private" Id="Private" Converter="Bool"/>
				<JsonPath Expr="is_verified" Id="Verified" Converter="Bool"/>
				<JsonPath Expr="profile_pic_url" Id="Avatar" Converter="String"/>
			</JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="HashtagSearch" Title="Search for Hashtags" Group="Hashtags">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Debug.DefaultValue="zaralarsson"/>
    </Parameters>
    <Paging PageSize="100" MaxTake="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/web/search/topsearch/?context=hashtag&query=@Utils.UrlEncode(Model.Query)
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.hashtags[*].hashtag">
				<JsonPath Expr="name" Id="Hashtag" Converter="String"/>
				<JsonPath Expr="media_count" Id="Count" Title="Count" Converter="Long"/>
			</JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="PlacesSearch" Title="Search for Places" Group="Places">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Debug.DefaultValue="stockholm"/>
    </Parameters>
    <Paging PageSize="100" MaxTake="100"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://www.instagram.com/web/search/topsearch/?context=place&query=@Utils.UrlEncode(Model.Query)
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.places[*].place">
				<JsonPath Expr="location.name" Id="Name" Converter="String"/>
				<JsonPath Expr="location.pk" Id="PlaceId" Title="Place Id" Converter="String"/>
				<JsonPath Expr="location.address" Id="Address" Converter="String"/>
				<JsonPath Expr="location.city" Id="City" Converter="String"/>
				<JsonPath Expr="location.short_name" Id="ShortName" Title="Short Name" Converter="String"/>
				<JsonPath Expr="location.lng" Id="Longitude" Converter="String"/>
				<JsonPath Expr="location.lat" Id="Latitude" Converter="String"/>
				<JsonPath Expr="location.external_source" Id="ExternalSource" Title="External Source" Converter="Auto"/>
				<JsonPath Expr="location.facebook_places_id" Id="FacebookPlaceId" Title="Facebook Place Id" Converter="String"/>
			</JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="AccountFeed" Title="Accounts Post Feed" Group="Accounts">
    <Parameters>
      <Text Id="User" Title="Username or URL" Required="true" Debug.DefaultValue="zaralarsson&#0010;justinbieber" Multiline="true"/>
    </Parameters>
    <Prepare>
      <Connector Id="AccountLookupUsernameHidden" Parameters="User"/>
    </Prepare>
		<Batch Parameter="User" Separator="\n"/>
    <Paging PageSize="50" EvenPages="false">
      <Parse>
				<JsonPath Expr="$.data.user.edge_owner_to_timeline_media.page_info.end_cursor" Id="Cursor"/>
				<JsonPath Expr="$.data.user.edge_owner_to_timeline_media.page_info.has_next_page" Id="HasNextPage" Converter="Bool" DefaultValue="false"/>
      </Parse>
    </Paging>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				@GetUserFeedRequest()
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Expr="$.data.user.edge_owner_to_timeline_media.edges[*].node">
				<Compute Expr="https://www.instagram.com/p/@Model.Inp" Id="Url" Title="URL">
					<JsonPath Expr="shortcode" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="taken_at_timestamp" Id="Created" Converter="DateTime" Converter.SourceFormat="Unix"/>
				<JsonPath Expr="edge_media_to_caption.edges[0].node.text" Id="Caption" DefaultValue=""/>
				<Compute Expr="@GetPostType()" Id="Type" Title="Type">
					<JsonPath Expr="__typename" Id="Inp" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="edge_media_preview_like.count" Id="Likes" Converter="Long"/>
				<JsonPath Expr="edge_media_to_comment.count" Id="Comments" Converter="Long"/>
				<JsonPath Expr="video_view_count" Id="VideoViews" Title="Video Views" Converter="Auto" DefaultValue=""/>
				<JsonPath Expr="dimensions.height" Id="Height" Converter="Long"/>
				<JsonPath Expr="dimensions.width" Id="Width" Converter="Long"/>
				<JsonPath Expr="display_url" Id="DisplayUrl" Title="Display URL"/>
				<JsonPath Expr="thumbnail_src" Id="ImageUrl" Title="Thumbnail"/>
				<JsonPath Expr="owner.id" Id="OwnerId" Converter="String"/>
        <Compute Expr="@Model.Username" Id="Username" Title="Username"/>
        <Compute Expr="@Model.FullName" Id="FullName" Title="Full Name"/>
        <Compute Expr="@Model.Followers" Id="Followers" Title="Followers" Converter="Int"/>
        <Compute Expr="@Model.Avatar" Id="Avatar" Title="Avatar"/>
			</JsonPath>
    </Parse>
  </RestConnector>

	<RestConnector Id="AccountLookupUsernameHidden" Group="Accounts" Hidden="true">
    <Parameters>
      <Text Id="User" Required="true" Debug.DefaultValue="zaralarsson"/>
    </Parameters>
		<Fetch>
			<HttpSettings>
        <Cache>true</Cache>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
				https://www.instagram.com/@(FetchUsernameString())/?__a=1
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
			<JsonPath Expr="graphql.user.id" Id="UserId"/>
			<JsonPath Expr="graphql.user.username" Id="Username" Title="Username"/>
			<JsonPath Expr="graphql.user.full_name" Id="FullName" Title="Full Name"/>
			<JsonPath Expr="graphql.user.edge_followed_by.count" Id="Followers"/>
			<JsonPath Expr="graphql.user.profile_pic_url" Id="Avatar" Title="Avatar"/>
    </Parse>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
		string FetchPostString() {
			if(Model.Post.Contains("instagram.com/p/"))
			{
				Regex regex = new Regex(@"instagram.com\/p\/([\w\-]{4,20})");

				if(regex.IsMatch(Model.Post))
				{
					Match match = regex.Match(Model.Post);
					return match.Groups[1].Value;
				}
			}

			return Model.Post;
    }

    string FetchUsernameString() {
			if(Model.User.StartsWith("@"))
				return Model.User.Substring(1);

			if(Model.User.Contains("instagram.com"))
			{
				Regex regex = new Regex(@"instagram.com\/([\w.]{0,29})");

				if(regex.IsMatch(Model.User))
				{
					Match match = regex.Match(Model.User);
					return match.Groups[1].Value;
				}
			}

			return Model.User;
    }

		string StripHashtag() {
			return Model.Hashtag.StartsWith("#") ? Model.Hashtag.Substring(1) : Model.Hashtag;
		}

		string GetPostType() {
			return Regex.Replace(Model.Inp, "Graph", "");
		}

		string GetUserFeedRequest() {
			Dictionary<string, dynamic> dict = new Dictionary<string, dynamic>();
			dict.Add("id", Model.UserId);
			dict.Add("first", 50);

			if(Model.PageCursor.Page != 0 && Model.HasNextPage) {
				dict.Add("after", Model.Cursor);
			}

			string url = "https://www.instagram.com/graphql/query/?query_id=17888483320059182";
			string parameters = "&variables=" + @Utils.UrlEncode(Newtonsoft.Json.JsonConvert.SerializeObject(dict));
			return url + parameters;
		}
    ]]>
  </RazorFunctions>

</Suite>