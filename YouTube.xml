<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Social" Title="YouTube" Identifier="YouTube" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/YouTube.xml" HelpUrl="http://seotoolsforexcel.com/youtube/" HelpText="Documentation">

  <Author Name="Niels Bosma" Url="https://se.linkedin.com/in/bosmaniels"/>

  <GoogleOAuth2Authenticator ClientId="" ClientSecret="" Scope="https://www.googleapis.com/auth/youtube.force-ssl" StayAuthenticated="true"/>

  <Resources>
    <Resource Id="Fail">
      <Fail>
        <Regex Expr="^Not Found$" Group="0"/>
        <JsonPath Expr="error.message"/>
      </Fail>
    </Resource>
  </Resources>

  <RazorFunctions>
    <![CDATA[

    string[] _SelectedDimensions() {
      string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
      return ((ResultField[])Model.Headers)
        .Where(e => e.Tag == "Dimensions" && fields.Contains(e.Identifier.ToLower()))
        .Select(e => e.Identifier)
        .ToArray();
    }

    string SelectedDimensions() {
      return string.Join(",",_SelectedDimensions().Select(e => "\"" + e + "\"").ToArray());
    }

    string DimensionIndex(string dimension) {
      return Array.IndexOf(_SelectedDimensions(),dimension).ToString();
    }

    string _RenderOperator(string op)
    {
	    return op == "==" ? "equals" :
		    op == "!=" ? "notEquals" :
		    op == "=~" ? "contains" :
		    "notContains";
    }

    string RenderFilter()
    {
	    var lines = ((string)Model.Filter??"").Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e));

	    var filters = lines
		    .Select(e => Regex.Match(e, "([^!=]+)(!=|==|!~|=~)([^!=]+)"))
		    .Where(e => e.Success)
		    .Select(e => string.Format("{{'dimension':'{0}','operator':'{1}','expression':'{2}'}}",
			    e.Groups[1].Value.Trim(),
			    _RenderOperator(e.Groups[2].Value.Trim()),
			    e.Groups[3].Value.Trim()));

	    if(filters.Any())
	    {
		    return string.Format(",'dimensionFilterGroups': [{{'filters':[{0}]}}]",string.Join(",",filters.ToArray()));
	    }

	    return "";
    }

   ]]>
  </RazorFunctions>

  <RestConnector Id="VideoStatistics" Title="Video Statistics">
    <Parameters>
      <Text Id="VideoId" Title="Video Id or URL" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
      <![CDATA[
        https://www.googleapis.com/youtube/v3/videos?id=
				@if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch/") && Model.VideoId.EndsWith("/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch/")+7).TrimEnd('/'))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch/")+7))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch?v=") && Model.VideoId.EndsWith("/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch?v=")+9).TrimEnd('/'))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch?v="))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch?v")+9))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/v/") && Model.VideoId.EndsWith("/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/v/")+3).TrimEnd('/'))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/v/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/v/")+3))
				}
				else
				{
					@(Model.VideoId)
				}
				&part=statistics,snippet
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Title="Created" Identifier="Views" Expr="$.items.[snippet].[publishedAt]" Converter="DateTime"/>
      <JsonPath Title="Title" Identifier="Title" Expr="$.items.[snippet].[title]" Converter="String"/>
      <JsonPath Title="Description" Identifier="Description" Expr="$.items.[snippet].[description]" Converter="String"/>
      <JsonPath Title="Views" Identifier="Views" Expr="$.items.[statistics].[viewCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Likes" Identifier="Likes" Expr="$.items.[statistics].[likeCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Dislikes" Identifier="Dislikes" Expr="$.items.[statistics].[dislikeCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Favorites" Identifier="Favorites"  Expr="$.items.[statistics].[favoriteCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Comments" Identifier="Comments"  Expr="$.items.[statistics].[commentCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Tags" Identifier="Tags" Expr="$.items.[snippet].[tags]" Converter="String" Checked="false"/>
      <JsonPath Title="Channel Title" Identifier="ChannelTitle" Expr="$.items.[snippet].[channelTitle]" Converter="String"/>
      <JsonPath Title="Thumbnail" Identifier="Thumbnail" Expr="$.items.[snippet].[thumbnails].default.url" Converter="String"/>
    </Parse>
  </RestConnector>

  <RestConnector Id="ChannelStatistics" Title="Channel Statistics">
    <Parameters>
      <Text Id="ChannelId" Title="Channel Id or URL" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
      <![CDATA[
        https://www.googleapis.com/youtube/v3/channels?id=
				@if(Model.ChannelId.Contains("youtube") && Model.ChannelId.EndsWith("/"))
				{
					@(Model.ChannelId.Substring(Model.ChannelId.IndexOf("/channel/")+9).TrimEnd('/'))
				}
				else if(Model.ChannelId.Contains("youtube"))
				{
					@(Model.ChannelId.Substring(Model.ChannelId.IndexOf("/channel/")+9))
				}
				else
				{
					@(Model.ChannelId)
				}
				&part=statistics,snippet
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Title="Title" Identifier="Title"  Expr="$.items.[snippet].[title]" Converter="String" DefaultValue="0"/>
      <JsonPath Title="Description" Identifier="Description" Expr="$.items.[snippet].[description]" Converter="String" DefaultValue="0"/>
      <JsonPath Title="Created" Identifier="Created" Expr="$.items.[snippet].[publishedAt]" Converter="DateTime" DefaultValue="0"/>
      <JsonPath Title="Subscribers" Identifier="Subscribers"  Expr="$.items.[statistics].[subscriberCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Videos" Identifier="Videos" Expr="$.items.[statistics].[videoCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Total Views" Identifier="Views" Expr="$.items.[statistics].[viewCount]" Converter="Int" DefaultValue="0"/>
      <JsonPath Title="Thumbnail" Identifier="Thumbnail" Expr="$.items.[snippet].[thumbnails].[default].[url]" Converter="String" DefaultValue="0"/>
    </Parse>
  </RestConnector>

  <RestConnector Id="SearchVideos" Title="Videos Search">
    <Parameters>
      <Text DefaultValue="" Id="Query" Title="Query" Required="true"/>
      <Radio Id="Sorting" Title="Sorting" DefaultValue="date" Required="false">
        <DataSource>
          <Item Id="date" Title="Date"/>
          <Item Id="title" Title="Title"/>
          <Item Id="relevance" Title="Relevance"/>
          <Item Id="viewCount" Title="View Count"/>
          <Item Id="rating" Title="Rating"/>
        </DataSource>
      </Radio>
      <Radio Id="Duration" Title="Duration" DefaultValue="any" Required="false">
        <DataSource>
          <Item Id="any" Title="Any"/>
          <Item Id="long" Title="20 min+"/>
          <Item Id="medium" Title="4-20 min"/>
          <Item Id="short" Title="4 min-"/>
        </DataSource>
      </Radio>
      <Checkbox Id="videoDefinition" Title="HD Quality" DefaultValue="False"/>
    </Parameters>
    <Paging PageSize="50" EvenPages="false">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="pageInfo.totalResults"/>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch>
      <Fetch.Url>
      <![CDATA[
        https://www.googleapis.com/youtube/v3/search?
        &part=snippet
        &type=video
		    &order=@(Model.Sorting)
		    &videoDuration=@(Model.Duration)
		    &videoDefinition=@(Model.videoDefinition ? "high" : "any")
        &q=@Utils.UrlEncode(Model.Query)
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <Compute Id="Url" Title="URL">
          <Compute.Expr>
            http://www.youtube.com/watch/@(Model.Id)
          </Compute.Expr>
          <JsonPath Expr="id.videoId" Id="Id" Converter="String"/>
        </Compute>
        <JsonPath Title="Id" Identifier="Id" Expr="id.videoId" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Title" Identifier="Title" Expr="snippet.title" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Description" Identifier="Description" Expr="snippet.description" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Published" Identifier="Published" Expr="snippet.publishedAt" Converter="DateTime" DefaultValue="#NULL!"/>
        <JsonPath Title="Channel Id" Identifier="ChannelId" Expr="snippet.channelId" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Channel" Identifier="Channel" Expr="snippet.channelTitle" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Thumbnail" Identifier="Thumbail" Expr="snippet.thumbnails.default.url" Converter="String" DefaultValue="#NULL!"/>
      </JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="SearchChannels" Title="Channels Search">
    <Parameters>
      <Text DefaultValue="" Id="Query" Title="Query" Required="true"/>
      <Radio Id="Sorting" Title="Sorting" DefaultValue="date" Required="true">
        <DataSource>
          <Item Id="date" Title="Date"/>
          <Item Id="title" Title="Title"/>
          <Item Id="relevance" Title="Relevance"/>
          <Item Id="viewCount" Title="View Count"/>
          <Item Id="rating" Title="Rating"/>
        </DataSource>
      </Radio>
      <Radio Id="ChannelType" Title="Channel Type" DefaultValue="any" Required="true">
        <DataSource>
          <Item Id="any" Title="Any"/>
          <Item Id="show" Title="Show"/>
        </DataSource>
      </Radio>
    </Parameters>
    <Paging PageSize="50" EvenPages="false">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="pageInfo.totalResults"/>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch Url="">
      <Fetch.Url>
        <![CDATA[
        https://www.googleapis.com/youtube/v3/search?´
        &part=snippet
        &type=channel
		    &order=@(Model.Sorting)
		    &channelType=@(Model.ChannelType)
        &q=@Utils.UrlEncode(Model.Query)
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <Compute Id="Url" Title="URL">
          <Compute.Expr>
            http://www.youtube.com/channel/@(Model.Id)
          </Compute.Expr>
          <JsonPath Expr="id.channelId" Id="Id" Converter="String"/>
        </Compute>
        <JsonPath Title="Id" Identifier="Id" Expr="id.channelId" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Title" Identifier="Title" Expr="snippet.title" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Description" Identifier="Description" Expr="snippet.description" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Published" Identifier="Published" Expr="snippet.publishedAt" Converter="DateTime" DefaultValue="#NULL!"/>
        <JsonPath Title="Channel" Identifier="Channel" Expr="snippet.channelTitle" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Thumbnail" Identifier="Thumbail" Expr="snippet.thumbnails.default.url" Converter="String" DefaultValue="#NULL!"/>
      </JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="SearchPlaylists" Title="Playlists Search">
    <Parameters>
      <Text DefaultValue="" Id="Query" Title="Query" Required="true"/>
      <Radio Id="Sorting" Title="Sorting" DefaultValue="date" Required="true">
        <DataSource>
          <Item Id="date" Title="Date"/>
          <Item Id="title" Title="Title"/>
          <Item Id="relevance" Title="Relevance"/>
          <Item Id="viewCount" Title="View Count"/>
          <Item Id="rating" Title="Rating"/>
        </DataSource>
      </Radio>
    </Parameters>
    <Paging PageSize="50" EvenPages="false">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="pageInfo.totalResults"/>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch Url="">
      <Fetch.Url>
        <![CDATA[
        https://www.googleapis.com/youtube/v3/search?
        &part=snippet
        &type=playlist
		    &order=@(Model.Sorting)
        &q=@Utils.UrlEncode(Model.Query)
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <Compute Id="Url" Title="Url">
          <Compute.Expr>
            http://www.youtube.com/watch?v=PT2_F-1esPk&amp;list=@(Model.Id)
          </Compute.Expr>
          <JsonPath Expr="id.playlistId" Id="Id" Converter="String"/>
        </Compute>
        <JsonPath Title="Id" Identifier="Id" Expr="id.playlistId" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Title" Identifier="Title" Expr="snippet.title" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Description" Identifier="Description" Expr="snippet.description" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Published" Identifier="Published" Expr="snippet.publishedAt" Converter="DateTime" DefaultValue="#NULL!"/>
        <JsonPath Title="Channel" Identifier="Channel" Expr="snippet.channelTitle" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Thumbnail" Identifier="Thumbail" Expr="snippet.thumbnails.default.url" Converter="String" DefaultValue="#NULL!"/>
      </JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="VideosFromChannel" Title="Channel Videos">
    <Parameters>
      <Text DefaultValue="" Id="ChannelId" Title="Channel Id or URL" Required="true" Debug.DefaultValue="UC0aVoboXBUx2-tVIWHc3W2Q"/>
    </Parameters>
    <Paging PageSize="50">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="pageInfo.totalResults"/>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch Url="">
      <Fetch.Url>
        <![CDATA[
        https://www.googleapis.com/youtube/v3/search?
		    order=date
        &part=snippet
        &channelId=
				@if(Model.ChannelId.Contains("youtube") && Model.ChannelId.EndsWith("/"))
				{
					@(Model.ChannelId.Substring(Model.ChannelId.IndexOf("/channel/")+9).TrimEnd('/'))
				}
				else if(Model.ChannelId.Contains("youtube"))
				{
					@(Model.ChannelId.Substring(Model.ChannelId.IndexOf("/channel/")+9))
				}
				else
				{
					@(Model.ChannelId)
				}
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <Compute Id="Url" Title="URL">
          <Compute.Expr>
            http://www.youtube.com/watch/@(Model.Id)
          </Compute.Expr>
          <JsonPath Expr="id.videoId" Id="Id" Converter="String"/>
        </Compute>
        <JsonPath Title="Id" Identifier="Id" Expr="id.videoId" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Title" Identifier="Title" Expr="snippet.title" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Description" Identifier="Description" Expr="snippet.description" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Published" Identifier="Published" Expr="snippet.publishedAt" Converter="DateTime" DefaultValue="#NULL!"/>
        <JsonPath Title="Thumbnail" Identifier="Thumbail" Expr="snippet.thumbnails.default.url" Converter="String" DefaultValue="#NULL!"/>
      </JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="VideosFromPlayList" Title="Playlist Videos">
    <Parameters>
      <Text DefaultValue="" Id="PlayListId" Title="PlayList Id" Required="true" Debug.DefaultValue="PLNWnPlJSKEVGXEEiqknZqa0JOpDKkUC3L"/>
    </Parameters>
    <Paging PageSize="50">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="pageInfo.totalResults"/>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch Url="">
      <Fetch.Url>
        <![CDATA[
        https://www.googleapis.com/youtube/v3/playlistItems?
        &part=snippet
        &playlistId=@Utils.UrlEncode(Model.PlayListId)
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <Compute Id="Url" Title="URL">
          <Compute.Expr>
            http://www.youtube.com/watch/@(Model.Id)
          </Compute.Expr>
          <JsonPath Expr="snippet.resourceId.videoId" Id="Id" Converter="String"/>
        </Compute>
        <JsonPath Title="Id" Identifier="Id" Expr="snippet.resourceId.videoId" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Title" Identifier="Title" Expr="snippet.title" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Description" Identifier="Description" Expr="snippet.description" Converter="String" DefaultValue="#NULL!"/>
        <JsonPath Title="Published" Identifier="Published" Expr="snippet.publishedAt" Converter="DateTime" DefaultValue="#NULL!"/>
        <JsonPath Title="Thumbnail" Identifier="Thumbail" Expr="snippet.thumbnails.default.url" Converter="String" DefaultValue="#NULL!"/>
      </JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="VideoComments" Title="Video Comments">
    <Parameters>
      <Text DefaultValue="" Id="VideoId" Title="Video Id or URL" Required="true" Debug.DefaultValue="MbHQo4KkBWc"/>
      <Radio Id="Sorting" Title="Sorting" DefaultValue="date" Required="true">
        <DataSource>
          <Item Id="time" Title="Time"/>
          <Item Id="relevance" Title="Relevance"/>
        </DataSource>
      </Radio>
    </Parameters>
    <Paging PageSize="100" EvenPages="false">
      <Parse>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch Url="">
      <Fetch.Url>
        <![CDATA[
        https://www.googleapis.com/youtube/v3/commentThreads?videoId=
				@if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch/") && Model.VideoId.EndsWith("/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch/")+7).TrimEnd('/'))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch/")+7))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch?v=") && Model.VideoId.EndsWith("/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch?v=")+9).TrimEnd('/'))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/watch?v="))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/watch?v")+9))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/v/") && Model.VideoId.EndsWith("/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/v/")+3).TrimEnd('/'))
				}
				else if(Model.VideoId.Contains("youtube") && Model.VideoId.Contains("/v/"))
				{
					@(Model.VideoId.Substring(Model.VideoId.IndexOf("/v/")+3))
				}
				else
				{
					@(Model.VideoId)
				}
				&part=snippet
				&order=@(Model.Sorting)
				&textFormat=plainText
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <JsonPath Expr="id" Id="CommentId" Title="Comment Id" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.textDisplay" Id="Text" Title="Text" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorDisplayName" Id="DisplayName" Title="Display Name" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.publishedAt" Id="Posted" Title="Posted" Converter="DateTime" HelpText=""/>
        <JsonPath Expr="snippet.totalReplyCount" Id="Replies" Title="Replies" Converter="Int" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.likeCount" Id="Likes" Title="Likes" Converter="Int" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorChannelId.value" Id="ChannelId" Title="Channel Id" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorChannelUrl" Id="ChannelUrl" Title="Channel URL" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorProfileImageUrl" Id="ChannelAvatarUrl" Title="Channel Avatar URL" Converter="String" HelpText=""/>
      </JsonPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="ChannelComments" Title="Channel Comments">
    <Parameters>
      <Text DefaultValue="" Id="ChannelId" Title="Channel Id or URL" Required="true" Debug.DefaultValue="UCC3L8QaxqEGUiBC252GHy3w"/>
      <Radio Id="Sorting" Title="Sorting" DefaultValue="date" Required="true">
        <DataSource>
          <Item Id="time" Title="Time"/>
          <Item Id="relevance" Title="Relevance"/>
        </DataSource>
      </Radio>
    </Parameters>
    <Paging PageSize="100" EvenPages="false">
      <Parse>
        <JsonPath Id="NextPageToken" Expr="nextPageToken"/>
      </Parse>
    </Paging>
    <Fetch Url="">
      <Fetch.Url>
        <![CDATA[
        https://www.googleapis.com/youtube/v3/commentThreads?channelId=
				@if(Model.ChannelId.Contains("youtube") && Model.ChannelId.EndsWith("/"))
				{
					@(Model.ChannelId.Substring(Model.ChannelId.IndexOf("/channel/")+9).TrimEnd('/'))
				}
				else if(Model.ChannelId.Contains("youtube"))
				{
					@(Model.ChannelId.Substring(Model.ChannelId.IndexOf("/channel/")+9))
				}
				else
				{
					@(Model.ChannelId)
				}
				&part=snippet
				&order=@(Model.Sorting)
				&textFormat=plainText
        &maxResults=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &pageToken=@Model.NextPageToken
        }
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <JsonPath Expr="id" Id="CommentId" Title="Comment Id" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.textDisplay" Id="Text" Title="Text" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorDisplayName" Id="DisplayName" Title="Display Name" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.publishedAt" Id="Posted" Title="Posted" Converter="DateTime" HelpText=""/>
        <JsonPath Expr="snippet.totalReplyCount" Id="Replies" Title="Replies" Converter="Int" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.likeCount" Id="Likes" Title="Likes" Converter="Int" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorChannelId.value" Id="ChannelId" Title="Channel Id" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorChannelUrl" Id="ChannelUrl" Title="Channel URL" Converter="String" HelpText=""/>
        <JsonPath Expr="snippet.topLevelComment.snippet.authorProfileImageUrl" Id="ChannelAvatarUrl" Title="Channel Avatar URL" Converter="String" HelpText=""/>
      </JsonPath>
    </Parse>
  </RestConnector>

</Suite>