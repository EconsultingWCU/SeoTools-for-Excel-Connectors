<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Social" Title="YouTube Analytics" Identifier="YouTubeAnalytics" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/YouTube.xml" HelpUrl="http://seotoolsforexcel.com/youtube/" HelpText="Documentation">

  <Author Name="Niels Bosma" Url="https://se.linkedin.com/in/bosmaniels"/>

  <GoogleOAuth2Authenticator ClientId="" ClientSecret="" Scope="https://www.googleapis.com/auth/yt-analytics.readonly" StayAuthenticated="true"/>

  <RestConnector Id="ChannelStatistics" Title="Channel Statistics">
    <Parameters>
      <Text Id="VideoId" Title="Video Id" Required="false"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
      <![CDATA[
        https://www.googleapis.com/youtube/analytics/v1/reports?
        ids=channel==MINE
        &start-date=@Utils.UrlEncode(((DateTime)Model.DateInterval.StartDate).ToString("yyyy-MM-dd"))
        &end-date=@Utils.UrlEncode(((DateTime)Model.DateInterval.EndDate).ToString("yyyy-MM-dd"))
        &dimensions=day
        &metrics=@SelectedFields()
        &alt=csv
      ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Authenticator.AccessToken)]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <Csv Separator="," HasHeader="true">
        <Field Id="views" Title="Views" Tag="views" Converter="Int" HelpText=""/>
        <Field Id="likes" Title="Likes" Tag="likes" Converter="Int" HelpText=""/>
        <Field Id="dislikes" Title="Dislikes" Tag="dislikes" Converter="Int" HelpText=""/>
        <Field Id="shares" Title="Shares" Tag="shares" Converter="Int" HelpText=""/>
      </Csv>
    </Parse>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
      string SelectedFields() {
        string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
        return string.Join(",",((ResultField[])Model.Headers).Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower())).Select(e => e.Tag).Distinct().ToArray());
      }
    ]]>
  </RazorFunctions>

</Suite>