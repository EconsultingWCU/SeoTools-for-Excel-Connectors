<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Others" Title="Spotify" Id="Spotify" RequireVersion="6.1.9" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Spotify.xml" HelpUrl="http://seotoolsforexcel.com/Spotify/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/Spotify/">
    <Text Id="ClientId" Title="Client Id" Required="true" HelpUrl="https://developer.spotify.com/web-api/authorization-guide/"/>
    <Text Id="ClientSecret" Title="Client Secret" Required="true" HelpUrl="https://developer.spotify.com/web-api/authorization-guide/"/>
  </Settings>

  <Resources>
    <Resource Id="CountryCodes">
			<Item Id="all" Title="All Markets"/>
			<Item Id="AF" Title="Afghanistan"/>
			<Item Id="AX" Title="Aland Islands"/>
			<Item Id="AL" Title="Albania"/>
			<Item Id="DZ" Title="Algeria"/>
			<Item Id="AS" Title="American Samoa"/>
			<Item Id="AD" Title="Andorra"/>
			<Item Id="AO" Title="Angola"/>
			<Item Id="AI" Title="Anguilla"/>
			<Item Id="AQ" Title="Antarctica"/>
			<Item Id="AG" Title="Antigua and Barbuda"/>
			<Item Id="AR" Title="Argentina"/>
			<Item Id="AM" Title="Armenia"/>
			<Item Id="AW" Title="Aruba"/>
			<Item Id="AU" Title="Australia"/>
			<Item Id="AT" Title="Austria"/>
			<Item Id="AZ" Title="Azerbaijan"/>
			<Item Id="BS" Title="Bahamas"/>
			<Item Id="BH" Title="Bahrain"/>
			<Item Id="BD" Title="Bangladesh"/>
			<Item Id="BB" Title="Barbados"/>
			<Item Id="BY" Title="Belarus"/>
			<Item Id="BE" Title="Belgium"/>
			<Item Id="BZ" Title="Belize"/>
			<Item Id="BJ" Title="Benin"/>
			<Item Id="BM" Title="Bermuda"/>
			<Item Id="BT" Title="Bhutan"/>
			<Item Id="BO" Title="Bolivia"/>
			<Item Id="BQ" Title="Bonaire, Saint Eustatius and Saba"/>
			<Item Id="BA" Title="Bosnia and Herzegovina"/>
			<Item Id="BW" Title="Botswana"/>
			<Item Id="BV" Title="Bouvet Island"/>
			<Item Id="BR" Title="Brazil"/>
			<Item Id="IO" Title="British Indian Ocean Territory"/>
			<Item Id="VG" Title="British Virgin Islands"/>
			<Item Id="BN" Title="Brunei"/>
			<Item Id="BG" Title="Bulgaria"/>
			<Item Id="BF" Title="Burkina Faso"/>
			<Item Id="BI" Title="Burundi"/>
			<Item Id="KH" Title="Cambodia"/>
			<Item Id="CM" Title="Cameroon"/>
			<Item Id="CA" Title="Canada"/>
			<Item Id="CV" Title="Cape Verde"/>
			<Item Id="KY" Title="Cayman Islands"/>
			<Item Id="CF" Title="Central African Republic"/>
			<Item Id="TD" Title="Chad"/>
			<Item Id="CL" Title="Chile"/>
			<Item Id="CN" Title="China"/>
			<Item Id="CX" Title="Christmas Island"/>
			<Item Id="CC" Title="Cocos Islands"/>
			<Item Id="CO" Title="Colombia"/>
			<Item Id="KM" Title="Comoros"/>
			<Item Id="CK" Title="Cook Islands"/>
			<Item Id="CR" Title="Costa Rica"/>
			<Item Id="HR" Title="Croatia"/>
			<Item Id="CU" Title="Cuba"/>
			<Item Id="CW" Title="Curaçao"/>
			<Item Id="CY" Title="Cyprus"/>
			<Item Id="CZ" Title="Czech Republic"/>
			<Item Id="CD" Title="Democratic Republic of the Congo"/>
			<Item Id="DK" Title="Denmark"/>
			<Item Id="DJ" Title="Djibouti"/>
			<Item Id="DM" Title="Dominica"/>
			<Item Id="DO" Title="Dominican Republic"/>
			<Item Id="TL" Title="East Timor"/>
			<Item Id="EC" Title="Ecuador"/>
			<Item Id="EG" Title="Egypt"/>
			<Item Id="SV" Title="El Salvador"/>
			<Item Id="GQ" Title="Equatorial Guinea"/>
			<Item Id="ER" Title="Eritrea"/>
			<Item Id="EE" Title="Estonia"/>
			<Item Id="ET" Title="Ethiopia"/>
			<Item Id="FK" Title="Falkland Islands"/>
			<Item Id="FO" Title="Faroe Islands"/>
			<Item Id="FJ" Title="Fiji"/>
			<Item Id="FI" Title="Finland"/>
			<Item Id="FR" Title="France"/>
			<Item Id="GF" Title="French Guiana"/>
			<Item Id="PF" Title="French Polynesia"/>
			<Item Id="TF" Title="French Southern Territories"/>
			<Item Id="GA" Title="Gabon"/>
			<Item Id="GM" Title="Gambia"/>
			<Item Id="GE" Title="Georgia"/>
			<Item Id="DE" Title="Germany"/>
			<Item Id="GH" Title="Ghana"/>
			<Item Id="GI" Title="Gibraltar"/>
			<Item Id="GR" Title="Greece"/>
			<Item Id="GL" Title="Greenland"/>
			<Item Id="GD" Title="Grenada"/>
			<Item Id="GP" Title="Guadeloupe"/>
			<Item Id="GU" Title="Guam"/>
			<Item Id="GT" Title="Guatemala"/>
			<Item Id="GG" Title="Guernsey"/>
			<Item Id="GN" Title="Guinea"/>
			<Item Id="GW" Title="Guinea-Bissau"/>
			<Item Id="GY" Title="Guyana"/>
			<Item Id="HT" Title="Haiti"/>
			<Item Id="HM" Title="Heard Island and McDonald Islands"/>
			<Item Id="HN" Title="Honduras"/>
			<Item Id="HK" Title="Hong Kong"/>
			<Item Id="HU" Title="Hungary"/>
			<Item Id="IS" Title="Iceland"/>
			<Item Id="IN" Title="India"/>
			<Item Id="ID" Title="Indonesia"/>
			<Item Id="IR" Title="Iran"/>
			<Item Id="IQ" Title="Iraq"/>
			<Item Id="IE" Title="Ireland"/>
			<Item Id="IM" Title="Isle of Man"/>
			<Item Id="IL" Title="Israel"/>
			<Item Id="IT" Title="Italy"/>
			<Item Id="CI" Title="Ivory Coast"/>
			<Item Id="JM" Title="Jamaica"/>
			<Item Id="JP" Title="Japan"/>
			<Item Id="JE" Title="Jersey"/>
			<Item Id="JO" Title="Jordan"/>
			<Item Id="KZ" Title="Kazakhstan"/>
			<Item Id="KE" Title="Kenya"/>
			<Item Id="KI" Title="Kiribati"/>
			<Item Id="XK" Title="Kosovo"/>
			<Item Id="KW" Title="Kuwait"/>
			<Item Id="KG" Title="Kyrgyzstan"/>
			<Item Id="LA" Title="Laos"/>
			<Item Id="LV" Title="Latvia"/>
			<Item Id="LB" Title="Lebanon"/>
			<Item Id="LS" Title="Lesotho"/>
			<Item Id="LR" Title="Liberia"/>
			<Item Id="LY" Title="Libya"/>
			<Item Id="LI" Title="Liechtenstein"/>
			<Item Id="LT" Title="Lithuania"/>
			<Item Id="LU" Title="Luxembourg"/>
			<Item Id="MO" Title="Macao"/>
			<Item Id="MK" Title="Macedonia"/>
			<Item Id="MG" Title="Madagascar"/>
			<Item Id="MW" Title="Malawi"/>
			<Item Id="MY" Title="Malaysia"/>
			<Item Id="MV" Title="Maldives"/>
			<Item Id="ML" Title="Mali"/>
			<Item Id="MT" Title="Malta"/>
			<Item Id="MH" Title="Marshall Islands"/>
			<Item Id="MQ" Title="Martinique"/>
			<Item Id="MR" Title="Mauritania"/>
			<Item Id="MU" Title="Mauritius"/>
			<Item Id="YT" Title="Mayotte"/>
			<Item Id="MX" Title="Mexico"/>
			<Item Id="FM" Title="Micronesia"/>
			<Item Id="MD" Title="Moldova"/>
			<Item Id="MC" Title="Monaco"/>
			<Item Id="MN" Title="Mongolia"/>
			<Item Id="ME" Title="Montenegro"/>
			<Item Id="MS" Title="Montserrat"/>
			<Item Id="MA" Title="Morocco"/>
			<Item Id="MZ" Title="Mozambique"/>
			<Item Id="MM" Title="Myanmar"/>
			<Item Id="NA" Title="Namibia"/>
			<Item Id="NR" Title="Nauru"/>
			<Item Id="NP" Title="Nepal"/>
			<Item Id="NL" Title="Netherlands"/>
			<Item Id="AN" Title="Netherlands Antilles"/>
			<Item Id="NC" Title="New Caledonia"/>
			<Item Id="NZ" Title="New Zealand"/>
			<Item Id="NI" Title="Nicaragua"/>
			<Item Id="NE" Title="Niger"/>
			<Item Id="NG" Title="Nigeria"/>
			<Item Id="NU" Title="Niue"/>
			<Item Id="NF" Title="Norfolk Island"/>
			<Item Id="KP" Title="North Korea"/>
			<Item Id="MP" Title="Northern Mariana Islands"/>
			<Item Id="NO" Title="Norway"/>
			<Item Id="OM" Title="Oman"/>
			<Item Id="PK" Title="Pakistan"/>
			<Item Id="PW" Title="Palau"/>
			<Item Id="PS" Title="Palestinian Territory"/>
			<Item Id="PA" Title="Panama"/>
			<Item Id="PG" Title="Papua New Guinea"/>
			<Item Id="PY" Title="Paraguay"/>
			<Item Id="PE" Title="Peru"/>
			<Item Id="PH" Title="Philippines"/>
			<Item Id="PN" Title="Pitcairn"/>
			<Item Id="PL" Title="Poland"/>
			<Item Id="PT" Title="Portugal"/>
			<Item Id="PR" Title="Puerto Rico"/>
			<Item Id="QA" Title="Qatar"/>
			<Item Id="CG" Title="Republic of the Congo"/>
			<Item Id="RE" Title="Reunion"/>
			<Item Id="RO" Title="Romania"/>
			<Item Id="RU" Title="Russia"/>
			<Item Id="RW" Title="Rwanda"/>
			<Item Id="BL" Title="Saint Barthélemy"/>
			<Item Id="SH" Title="Saint Helena"/>
			<Item Id="KN" Title="Saint Kitts and Nevis"/>
			<Item Id="LC" Title="Saint Lucia"/>
			<Item Id="MF" Title="Saint Martin"/>
			<Item Id="PM" Title="Saint Pierre and Miquelon"/>
			<Item Id="VC" Title="Saint Vincent and the Grenadines"/>
			<Item Id="WS" Title="Samoa"/>
			<Item Id="SM" Title="San Marino"/>
			<Item Id="ST" Title="Sao Tome and Principe"/>
			<Item Id="SA" Title="Saudi Arabia"/>
			<Item Id="SN" Title="Senegal"/>
			<Item Id="RS" Title="Serbia"/>
			<Item Id="CS" Title="Serbia and Montenegro"/>
			<Item Id="SC" Title="Seychelles"/>
			<Item Id="SL" Title="Sierra Leone"/>
			<Item Id="SG" Title="Singapore"/>
			<Item Id="SX" Title="Sint Maarten"/>
			<Item Id="SK" Title="Slovakia"/>
			<Item Id="SI" Title="Slovenia"/>
			<Item Id="SB" Title="Solomon Islands"/>
			<Item Id="SO" Title="Somalia"/>
			<Item Id="ZA" Title="South Africa"/>
			<Item Id="GS" Title="South Georgia and the South Sandwich Islands"/>
			<Item Id="KR" Title="South Korea"/>
			<Item Id="SS" Title="South Sudan"/>
			<Item Id="ES" Title="Spain"/>
			<Item Id="LK" Title="Sri Lanka"/>
			<Item Id="SD" Title="Sudan"/>
			<Item Id="SR" Title="Suriname"/>
			<Item Id="SJ" Title="Svalbard and Jan Mayen"/>
			<Item Id="SZ" Title="Swaziland"/>
			<Item Id="SE" Title="Sweden"/>
			<Item Id="CH" Title="Switzerland"/>
			<Item Id="SY" Title="Syria"/>
			<Item Id="TW" Title="Taiwan"/>
			<Item Id="TJ" Title="Tajikistan"/>
			<Item Id="TZ" Title="Tanzania"/>
			<Item Id="TH" Title="Thailand"/>
			<Item Id="TG" Title="Togo"/>
			<Item Id="TK" Title="Tokelau"/>
			<Item Id="TO" Title="Tonga"/>
			<Item Id="TT" Title="Trinidad and Tobago"/>
			<Item Id="TN" Title="Tunisia"/>
			<Item Id="TR" Title="Turkey"/>
			<Item Id="TM" Title="Turkmenistan"/>
			<Item Id="TC" Title="Turks and Caicos Islands"/>
			<Item Id="TV" Title="Tuvalu"/>
			<Item Id="VI" Title="U.S. Virgin Islands"/>
			<Item Id="UG" Title="Uganda"/>
			<Item Id="UA" Title="Ukraine"/>
			<Item Id="AE" Title="United Arab Emirates"/>
			<Item Id="GB" Title="United Kingdom"/>
			<Item Id="US" Title="United States"/>
			<Item Id="UM" Title="United States Minor Outlying Islands"/>
			<Item Id="UY" Title="Uruguay"/>
			<Item Id="UZ" Title="Uzbekistan"/>
			<Item Id="VU" Title="Vanuatu"/>
			<Item Id="VA" Title="Vatican"/>
			<Item Id="VE" Title="Venezuela"/>
			<Item Id="VN" Title="Vietnam"/>
			<Item Id="WF" Title="Wallis and Futuna"/>
			<Item Id="EH" Title="Western Sahara"/>
			<Item Id="YE" Title="Yemen"/>
			<Item Id="ZM" Title="Zambia"/>
			<Item Id="ZW" Title="Zimbabwe"/>
    </Resource>
  </Resources>


  <RestConnector Id="GenerateToken" Title="GenerateToken" HelpUrl="https://developer.spotify.com/web-api/authorization-guide/" Hidden="false">
    <Fetch>
      <HttpSettings>
        <RequestMethod>POST</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'>Basic @(CreateBasicAuth())</Header>
        </RequestHeaders>
        <RequestBody>
					<![CDATA[grant_type=client_credentials]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://accounts.spotify.com/api/token
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="access_token" Id="Token" Title="Token" Converter="String" HelpText=""/>
    </Parse>
    <Fail>
      <JsonPath Expr="error_description"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="ArtistSearch" Title="Artist Search" HelpUrl="https://developer.spotify.com/web-api/search-item/">
		<Parameters>
      <Text Id="Query" Title="Search" Debug.DefaultValue="flowers" Required="true"/>
      <Text Id="YearStart" Title="Earliest Year" DefaultValue="" Required="false" HelpText=""/>
      <Text Id="YearEnd" Title="Latest Year" DefaultValue="" Required="false" HelpText=""/>
      <Text Id="Genre" Title="Filter by Genre" DefaultValue="" Required="false" HelpText=""/>
      <Select Id="CountryCode" Title="Filter by Market" Required="false" DefaultValue="all" HelpText="">
        <DataSource>
          <Resource Id="CountryCodes"/>
        </DataSource>
      </Select>
		</Parameters>
		<Prepare>
			<Connector Id="GenerateToken"/>
		</Prepare>
    <Paging PageSize="50" EvenPages="false" MaxTake="100000">
			<Parse>
				<JsonPath Id="AvaliableRows" Expr="artists.total"/>
			</Parse>
    </Paging>
    <Fetch>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'>Bearer  @(Model.Token)</Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://api.spotify.com/v1/search?
				q=@Utils.UrlEncode(Model.Query)
				@if(Model.YearStart != "" && Model.YearEnd != "" && Model.YearStart == Model.YearEnd)
				{
					@: %20year:@(Model.YearStart)
				}
				else if(Model.YearStart != "" && Model.YearEnd != "" && Model.YearStart != Model.YearEnd)
				{
					@: %20year:@(Model.YearStart)-@(Model.YearEnd)
				}
				else if(Model.YearStart != "" && Model.YearEnd == "")
				{
					@: %20year:@(Model.YearStart)-3000
				}
				else if(Model.YearStart == "" && Model.YearEnd != "")
				{
					@: %20year:0-@(Model.YearEnd)
				}
				@if(Model.Genre != "" && Model.Genre.Contains(" "))
				{
					@: &genre="@Utils.UrlEncode(Model.Genre)"
				}
				else if(Model.Genre != "" && !Model.Genre.Contains(" "))
				{
					@: &genre=@Utils.UrlEncode(Model.Genre)
				}
				&type=artist
				@if(Model.CountryCode != "all")
				{
					@: &market=@(Model.CountryCode)
				}
				&limit=@(Model.PageCursor.NextTake)
				&offset=@(Model.PageCursor.NextSkip)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="artists.items.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText=""/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
        <JsonPath Expr="popularity" Id="Popularity" Title="Popularity" Converter="Int" HelpText=""/>
        <JsonPath Expr="followers.total" Id="Followers" Title="Followers" Converter="Int" HelpText=""/>
        <Compute Id="Genres" Title="Genres">
          <Compute.Expr>
            <![CDATA[
            @{
              var temp = Regex.Replace(Model.GenresInput, @"\s+", " ");
              var temp2 = Regex.Replace(temp, @"\""", string.Empty);
              var genresstripped = temp2.Substring(1,temp2.Length-2);
            }
            @genresstripped
            ]]>
          </Compute.Expr>
					<JsonPath Expr="genres" Id="GenresInput" Converter="String" HelpText=""/>
        </Compute>
        <JsonPath Expr="href" Id="Link" Title="Link" Converter="String" HelpText=""/>
        <JsonPath Expr="external_urls.spotify" Id="SpotifyLink" Title="Spotify Link" Converter="String" HelpText=""/>
        <JsonPath Expr="images[0].url" Id="Image" Title="Image" Converter="String" HelpText="" DefaultValue=" "/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="errors.message"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="AlbumSearch" Title="Album Search" HelpUrl="https://developer.spotify.com/web-api/search-item/">
		<Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="flowers" Required="true"/>
      <Text Id="ArtistFilter" Title="Filter by Artist Name" Debug.DefaultValue="" Required="false"/>
      <Text Id="YearStart" Title="Earliest Year" DefaultValue="" Required="false" HelpText=""/>
      <Text Id="YearEnd" Title="Latest Year" DefaultValue="" Required="false" HelpText=""/>
      <Checkbox Id="NewOnly" Title="Released Within Last Two Weeks" DefaultValue="false"/>
      <Checkbox Id="Hipster" Title="Lowest 10% Popularity" DefaultValue="false"/>
      <Text Id="Genre" Title="Filter by Genre" DefaultValue="" Required="false" HelpText=""/>
      <Select Id="CountryCode" Title="Filter by Market" Required="false" DefaultValue="all" HelpText="">
        <DataSource>
          <Resource Id="CountryCodes"/>
        </DataSource>
      </Select>
		</Parameters>
		<Prepare>
			<Connector Id="GenerateToken"/>
		</Prepare>
    <Paging PageSize="50" EvenPages="false" MaxTake="100000">
			<Parse>
				<JsonPath Id="AvaliableRows" Expr="albums.total"/>
			</Parse>
    </Paging>
    <Fetch>
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'>Bearer  @(Model.Token)</Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://api.spotify.com/v1/search?
				q=@Utils.UrlEncode(Model.Query)
				@if(Model.ArtistFilter != "")
				{
					@: %20artist:@Utils.UrlEncode(Model.ArtistFilter)
				}
				@if(Model.NewOnly == true)
				{
					@: %20tag:new
				}
				else if(Model.YearStart != "" && Model.YearEnd != "" && Model.YearStart == Model.YearEnd)
				{
					@: %20year:@(Model.YearStart)
				}
				else if(Model.YearStart != "" && Model.YearEnd != "" && Model.YearStart != Model.YearEnd)
				{
					@: %20year:@(Model.YearStart)-@(Model.YearEnd)
				}
				else if(Model.YearStart != "" && Model.YearEnd == "")
				{
					@: %20year:@(Model.YearStart)-3000
				}
				else if(Model.YearStart == "" && Model.YearEnd != "")
				{
					@: %20year:0-@(Model.YearEnd)
				}
				@if(Model.Genre != "" && Model.Genre.Contains(" "))
				{
					@: &genre="@Utils.UrlEncode(Model.Genre)"
				}
				else if(Model.Genre != "" && !Model.Genre.Contains(" "))
				{
					@: &genre=@Utils.UrlEncode(Model.Genre)
				}
				@if(Model.Hipster == true)
				{
					@: %20tag:hipster
				}
				&type=album
				@if(Model.CountryCode != "all")
				{
					@: &market=@(Model.CountryCode)
				}
				&limit=@(Model.PageCursor.NextTake)
				&offset=@(Model.PageCursor.NextSkip)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="albums.items.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText=""/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
        <Compute Id="Genres" Title="Genres">
          <Compute.Expr>
            <![CDATA[
            @{
              var temp = Regex.Replace(Model.MarketsInput, @"\s+", " ");
              var temp2 = Regex.Replace(temp, @"\""", string.Empty);
              var marketsstripped = temp2.Substring(1,temp2.Length-2);
            }
            @marketsstripped
            ]]>
          </Compute.Expr>
					<JsonPath Expr="available_markets" Id="MarketsInput" Converter="String" HelpText=""/>
        </Compute>
        <JsonPath Expr="artists[0].id" Id="ArtistId" Title="Artist Id" Converter="String" HelpText=""/>
        <JsonPath Expr="artists[0].name" Id="Artist" Title="Artist Name" Converter="String" HelpText=""/>
        <JsonPath Expr="href" Id="Link" Title="Link" Converter="String" HelpText=""/>
        <JsonPath Expr="external_urls.spotify" Id="SpotifyLink" Title="Spotify Link" Converter="String" HelpText=""/>
        <JsonPath Expr="images[0].url" Id="Image" Title="Image" Converter="String" HelpText="" DefaultValue=" "/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="errors.message"/>
    </Fail>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    String CreateBasicAuth()
	  {
			string AuthString = Convert.ToBase64String(ASCIIEncoding.ASCII.GetBytes(Model.ClientId + ":" + Model.ClientSecret));
			return AuthString;
    }
    ]]>
  </RazorFunctions>

</Suite>