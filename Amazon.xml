<?xml version="1.0" encoding="utf-8" ?>
<Suite RequireVersion="6.0" Title="Amazon" Id="Amazon" Category="Shopping" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Amazon.xml" HelpUrl="http://seotoolsforexcel.com/amazon/" HelpText="Documentation">

  <Author Name="Niels Bosma" Url="https://se.linkedin.com/in/bosmaniels"/>

  <Resources>
    <Resource Id="Sortings">
      <Item Id="relevanceblender" Title="Relevance"/>
      <Item Id="price-asc-rank" Title="Price: Low to High"/>
      <Item Id="price-desc-rank" Title="Price: High to Low"/>
      <Item Id="review-rank" Title="Avg. Customer Review"/>
      <Item Id="date-desc-rank" Title="Newest Arrivals"/>
    </Resource>
  </Resources>

  <RestConnector Id="Amazon" Title="Amazon">
    <Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="football" Required="true"/>
      <Text Id="Domain" Title="Domain" DefaultValue="amazon.com" Required="true"/>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="relevanceblender">
        <DataSource>
          <Resource Id="Sortings"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="15" EvenPages="false"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
				http://www.@(Model.Domain)/s?
				field-keywords=@(Utils.UrlEncode(Model.Query))
				&page=@(Model.PageCursor.Page+1)
				&sort=@(Model.Sort)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <XPath Expr="//ul[contains(@@class,'s-result-list')]/li[descendant::span[contains(@@class,'-price')]]">
        <Compute Id="Url" Title="URL">
          <Compute.Expr>
						<![CDATA[
						@if(Model.UrlInput.Contains("/slredirect/") && Model.UrlInput is string)
						{
              @: https://www.amazon.com@(Model.UrlInput)
            }
						else if(!Model.UrlInput.Contains("/slredirect/") && Model.UrlInput is string)
						{
							@(Model.UrlInput)
						}
						else
						{
							@:
						}
						]]>
          </Compute.Expr>
					<XPath Id="UrlInput" Expr=".//a[contains(@@class,'-link')]" Attribute="href"/>
        </Compute>
        <Compute Id="Type" Title="Type">
          <Compute.Expr>
						<![CDATA[
						@if(Model.UrlInput.Contains("/slredirect/") && Model.UrlInput is string)
						{
              @: Sponsored
            }
						else
						{
							@: Organic
						}
						]]>
          </Compute.Expr>
					<XPath Id="UrlInput" Expr=".//a[contains(@@class,'-link')]" Attribute="href"/>
        </Compute>
				<XPath Id="Asin" Title="ASIN" Expr="." Attribute="data-asin" />
        <XPath Id="Title" Title="Title" Expr=".//h2" />
        <XPath Id="Price" Title="Price" Expr=".//span[contains(@@class,'-price')]"/>
				<Compute Id="AverageReview" Title="Average Review" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
						@if(Model.AverageReviewInput is string && Model.AverageReviewInput.Contains("out"))
						{
							@(Model.AverageReviewInput.Substring(0, Model.AverageReviewInput.IndexOf("out")))
            }
						else
						{
							@:
						}
					  ]]>
          </Compute.Expr>
					<XPath Id="AverageReviewInput" Expr=".//i[contains(@@class,'a-icon a-icon-star a-star')]" Converter="String"/>
        </Compute>
        <XPath Id="Reviews" Title="Reviews" Expr=".//a[contains(@@href,'customerReviews')]" Converter="Int" DefaultValue="0"/>
        <XPath Id="Offers" Title="Offers" Expr=".//a[contains(@@href,'offer-listing')]/text()" Converter="Int" DefaultValue="0"/>
      </XPath>
    </Parse>
  </RestConnector>

</Suite>
