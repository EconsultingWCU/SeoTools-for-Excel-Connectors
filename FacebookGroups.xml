<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Facebook Groups" RequireVersion="9.3" Id="FacebookGroups" Category="Social" LoginButton="https://seotoolsforexcel.com/logins/facebook.png" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/FacebookGroups.xml" HelpUrl="http://seotoolsforexcel.com/facebook-groups/" HelpText="Documentation">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

	<SeoToolsAuthenticator StayAuthenticated="true" Key="facebook-groups"/>

  <Resources>
		<Resource Id="Fail">
		  <Fail>
				<JsonPath Expr="errors.code" Fail.If="RegexMatches" Fail.ComparedTo="803" Fail.Action="EmptyResult"/>
				<JsonPath Expr="error.code" Fail.If="RegexMatches" Fail.ComparedTo="803" Fail.Action="EmptyResult"/>
				<JsonPath Expr="error.code" Fail.If="RegexMatches" Fail.ComparedTo="100" Fail.Action="EmptyResult"/>
				<JsonPath Expr="errors.message"/>
				<JsonPath Expr="error.message"/>
			</Fail>
    </Resource>
  </Resources>

	<RestConnector Id="GroupList" Title="Group List" HelpUrl="https://developers.facebook.com/docs/graph-api/reference/group/feed">
    <Paging PageSize="100">
      <Parse>
        <JsonPath Id="Cursor" Expr="paging.next"/>
      </Parse>
    </Paging>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://graph.facebook.com/v3.3/me/groups?&access_token=@(Model.Authenticator.Token)&fields=@SelectedFields()
				&limit=@(Model.PageCursor.NextTake)
        @(Model.PageCursor.Page != 0 ? "&after=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data[*]">
        <JsonPath Expr="id" Id="GroupId" Title="Group Id" Tag="id"/>
        <JsonPath Expr="name" Id="GroupName" Title="Group Name" Tag="name" DefaultValue=""/>
        <JsonPath Expr="created_time" Id="Created" Title="Created" Tag="created_time" Converter="DateTime"/>
        <JsonPath Expr="administrator" Id="Administrator" Title="Administrator" Tag="administrator" Converter="Bool"/>
        <JsonPath Expr="archived" Id="Archived" Title="Archived" Tag="archived" Converter="Bool"/>
      </JsonPath>
    </Parse>
		<Fail>
			<JsonPath Expr="data[0].id" Id="Inp1" Fail.If="IsEmpty" Fail.Action="Message" Fail.Message="No groups found. Did you grant access in browser authentication? Try Login/Logout."/>
		</Fail>
	</RestConnector>

	<RestConnector Id="GroupListHidden" Hidden="true">
    <Paging PageSize="100">
      <Parse>
        <JsonPath Id="Cursor" Expr="paging.next"/>
      </Parse>
    </Paging>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://graph.facebook.com/v3.3/me/groups?&access_token=@(Model.Authenticator.Token)&fields=administrator,name
				&limit=@(Model.PageCursor.NextTake)
        @(Model.PageCursor.Page != 0 ? "&after=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data[*]">
        <JsonPath Expr="id" Id="GroupId" Title="Group Id"/>
        <JsonPath Expr="name" Id="GroupName" Title="Group Name" DefaultValue=""/>
        <JsonPath Expr="administrator" Id="Administrator"/>
      </JsonPath>
    </Parse>
		<Fail>
			<JsonPath Expr="data[0].id" Id="Inp1" Fail.If="IsEmpty" Fail.Action="Message" Fail.Message="No groups found. Did you grant access in browser authentication? Try Login/Logout."/>
		</Fail>
	</RestConnector>

  <RestConnector Id="GroupFeed" Title="Group Feed" HelpUrl="https://developers.facebook.com/docs/graph-api/reference/group/feed">
    <Parameters>
      <Text Id="Id" Title="Group Id" Debug.DefaultValue="1442243072653847" Required="true" Select.Connector="GroupListHidden"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
    </Parameters>
    <Paging PageSize="50" EvenPages="false">
      <Parse>
        <JsonPath Id="Cursor" Expr="paging.next"/>
      </Parse>
    </Paging>
    <Batch Parameter="Id" Separator="\n"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://graph.facebook.com/v3.3/@(Model.Id)/feed?
        fields=@SelectedFields()
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null && Model.PageCursor.Page == 0)
        {
          @: &since=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
          @: &until=@(((DateTime)Model.DateInterval.EndDate.AddDays(1)).UnixTimeStampUtc())
        }
        &access_token=@(Model.Authenticator.Token)
        &limit=@(Model.PageCursor.NextTake)
        @(Model.PageCursor.Page != 0 ? "&after=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data[*]">
        <JsonPath Title="Post Id" Id="PostId" Expr="id" Converter="String"/>
        <JsonPath Title="Created" Id="Created" Expr="created_time" Converter="DateTime" Tag="created_time"/>
        <JsonPath Title="Message" Id="Message" Expr="message" Converter="String" Tag="message" DefaultValue=""/>
        <JsonPath Title="Title" Id="Title" Expr="attachments.data[0].title" Converter="String" Tag="attachments" DefaultValue=""/>
				<JsonPath Title="Description" Id="Description" Expr="attachments.data[0].description" Converter="String" Tag="attachments" DefaultValue=""/>
				<JsonPath Title="Type" Id="Type" Expr="attachments.data[0].type" Converter="String" Tag="attachments" DefaultValue="status"/>
        <JsonPath Title="Comments" Id="Comments" Expr="comments.summary.total_count" Converter="Int" Tag="comments.filter(stream).limit(0).summary(true)" DefaultValue="0"/>
        <JsonPath Title="Shares" Id="Shares" Expr="$.shares.count" Converter="Int" Tag="shares" DefaultValue="0"/>
        <JsonPath Title="Reactions" Id="Reactions" Expr="reactions.summary.total_count" Converter="Int" Tag="reactions.limit(0).summary(total_count).as(reactions)" DefaultValue=""/>
        <JsonPath Title="Width" Id="Width" Expr="attachments.data[0].media.image.width" Converter="Auto" Tag="attachments" DefaultValue=""/>
        <JsonPath Title="Height" Id="Height" Expr="attachments.data[0].media.image.height" Converter="Auto" Tag="attachments" DefaultValue=""/>
        <JsonPath Title="Video Length" Id="VideoLength" Expr="properties[?(@@.name=='Length')].text" Converter="String" Tag="properties" DefaultValue=""/>
        <JsonPath Title="Permalink" Id="PostLink" Expr="permalink_url" Converter="String" Tag="permalink_url" DefaultValue=""/>
				<JsonPath Title="Picture" Id="PictureUrl" Expr="$.full_picture" Converter="String" Tag="full_picture" DefaultValue=""/>
        <JsonPath Title="Thumbnail" Id="ThumbnailUrl" Expr="$.picture" Converter="String" Tag="picture" DefaultValue=""/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="GroupEvents" Title="Group Events" HelpUrl="https://developers.facebook.com/docs/graph-api/reference/v9.0/group/events">
    <Parameters>
      <Text Id="Id" Title="Group Id" Debug.DefaultValue="1442243072653847" Required="true" Select.Connector="GroupListHidden"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
    </Parameters>
    <Paging PageSize="50" EvenPages="false">
      <Parse>
        <JsonPath Id="Cursor" Expr="paging.next"/>
      </Parse>
    </Paging>
    <Batch Parameter="Id" Separator="\n"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://graph.facebook.com/v3.3/@(Model.Id)/events?
        fields=@SelectedFields()
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null && Model.PageCursor.Page == 0)
        {
          @: &since=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
          @: &until=@(((DateTime)Model.DateInterval.EndDate.AddDays(1)).UnixTimeStampUtc())
        }
        &access_token=@(Model.Authenticator.Token)
        &limit=@(Model.PageCursor.NextTake)
        @(Model.PageCursor.Page != 0 ? "&after=" + Model.Cursor : "")
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="data[*]">
        <JsonPath Expr="id" Id="EventId" Title="Event Id" Tag="id"/>
        <JsonPath Expr="name" Id="EventName" Title="Event Name" Tag="name"/>
        <JsonPath Expr="place.name" Id="Place" Title="Place" Tag="place" DefaultValue=""/>
        <JsonPath Expr="start_time" Id="StartTime" Title="Start Time" Tag="start_time" Converter="DateTime"/>
        <JsonPath Expr="end_time" Id="EndTime" Title="End Time" Tag="end_time" Converter="DateTime"/>
        <JsonPath Expr="updated_time" Id="UpdatedTime" Title="Updated Time" Tag="updated_time" Converter="DateTime"/>
        <JsonPath Expr="is_online" Id="Online" Title="Online" Tag="is_online" Converter="Bool"/>
        <JsonPath Expr="attending_count" Id="Attending" Tag="attending_count" Converter="Int"/>
        <JsonPath Expr="interested_count" Id="Interested" Tag="interested_count" Converter="Int"/>
        <JsonPath Expr="maybe_count" Id="Maybe" Tag="maybe_count" Converter="Int"/>
        <JsonPath Expr="noreply_count" Id="NoReply" Title="No Reply" Tag="noreply_count" Converter="Int"/>
        <JsonPath Expr="declined_count" Id="Declined" Tag="declined_count" Converter="Int"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
      string SelectedFields() {
        string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
        return string.Join(",",((ResultField[])Model.Headers).Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower())).Select(e => e.Tag).Distinct().ToArray());
      }
    ]]>
  </RazorFunctions>

</Suite>