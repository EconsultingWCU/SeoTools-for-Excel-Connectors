<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Twitter v2 Beta" Id="Twitter-v2Beta" Category="Social" RequireVersion="9.0" LoginButton="https://seotoolsforexcel.com/logins/twitter.png" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Twitter.xml" HelpUrl="http://seotoolsforexcel.com/twitter/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity" />

  <SeoToolsAuthenticator StayAuthenticated="true" Key="twitter"/>

  <Resources>
    <Resource Id="HttpSettings">
      <HttpSettings>
        <OAuth>
          <ConsumerKey>@Model.OAuthConsumerKey</ConsumerKey>
          <ConsumerSecret>@Model.OAuthConsumerSecret</ConsumerSecret>
          <Token>@Model.OAuthToken</Token>
          <TokenSecret>@Model.OAuthTokenSecret</TokenSecret>
        </OAuth>
      </HttpSettings>
		</Resource>
    <Resource Id="Fail">
		  <Fail>
				<JsonPath Expr="errors.detail" Fail.If="IsEqual" Fail.ComparedTo="Invalid Request"/>
				<JsonPath Expr="errors[0].title" Fail.If="IsEqual" Fail.ComparedTo="Invalid Request"/>
				<JsonPath Expr="errors.detail" Fail.If="IsEqual" Fail.ComparedTo="General Problem"/>
				<JsonPath Expr="errors[0].title" Fail.If="IsEqual" Fail.ComparedTo="General Problem"/>
				<JsonPath Expr="errors.detail" Fail.If="IsEqual" Fail.ComparedTo="Client Forbidden"/>
				<JsonPath Expr="errors[0].title" Fail.If="IsEqual" Fail.ComparedTo="Client Forbidden"/>
			</Fail>
		</Resource>
    <Resource Id="Tweet">
			<Compute Id="Url" Title="URL" Tag="id">
				<Compute.Expr>
          <![CDATA[
          https://www.twitter.com/@FetchToken("username")/statuses/@(Model.Inp2)/
					]]>
        </Compute.Expr>
				<JsonPath Expr="id" Id="Inp2" DefaultValue=""/>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<JsonPath Expr="id" Id="Id" Tag="tweet.id"/>
			<JsonPath Expr="created_at" Id="CreatedAt" Title="Date" Tag="tweet.created_at" Converter="DateTime"/>
			<JsonPath Expr="text" Id="Text" Converter="String" DefaultValue=""/>
			<Compute Expr="@(GetTweetType(Model.txt))" Id="Type">
				<JsonPath Expr="text" Id="txt" Converter="String" DefaultValue=""/>
			</Compute>
			<Compute Expr="@(AdjustEngagement(Model.txt))" Id="Retweets" Tag="tweet.public_metrics" Converter="Int">
				<JsonPath Expr="public_metrics.retweet_count" Id="Inp" Converter="Int"/>
				<JsonPath Expr="text" Id="txt" Converter="String" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="public_metrics.like_count" Id="Likes" Tag="tweet.public_metrics" Converter="Int"/>
			<JsonPath Expr="public_metrics.reply_count" Id="Replies" Tag="tweet.public_metrics" Converter="Int"/>
			<JsonPath Expr="public_metrics.quote_count" Id="Quotes" Tag="tweet.public_metrics" Converter="Int"/>
			<JsonPath Expr="lang" Id="Language" Tag="tweet.lang" DefaultValue=""/>
			<JsonPath Expr="csv(entities.hashtags[*].tag)" Id="HashtagEntities" Title="Hashtag Entities" Tag="tweet.entities" Converter="Auto" DefaultValue=""/>
			<JsonPath Expr="csv(entities.urls[*].expanded_url)" Id="UrlEntities" Title="URL Entities" Tag="tweet.entities" DefaultValue=""/>
			<JsonPath Expr="csv(entities.mentions[*].username)" Id="MentionsEntities" Title="User Mentions Entities" Tag="tweet.entities" Converter="Auto" DefaultValue=""/>
			<JsonPath Expr="context_annotations" Id="Annotations" Tag="tweet.context_annotations" DefaultValue=""/>
			<JsonPath Expr="conversation_id" Id="ConversationId" Title="Conversation Id" Tag="tweet.conversation_id" DefaultValue=""/>
			<JsonPath Expr="author_id" Id="UserId" Title="User Id" Converter="String"/>
			<Compute Id="Username" Tag="user.username" Title="Username">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("username")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="UserUrl" Tag="user.username" Title="User URL">
				<Compute.Expr>
          <![CDATA[
          https://www.twitter.com/@FetchToken("username")/
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Followers" Tag="user.public_metrics" Converter="Int">
				<Compute.Expr>
          <![CDATA[
					@FetchToken("public_metrics.followers_count")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Name" Tag="user.name">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("name")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Location" Tag="user.location" DefaultValue="">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("location")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Bio" Tag="user.description" DefaultValue="">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("description")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Follows" Tag="user.public_metrics" Converter="Int">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("public_metrics.following_count")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Lists" Tag="user.public_metrics" Converter="Int">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("public_metrics.listed_count")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Tweets" Tag="user.public_metrics" Converter="Int">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("public_metrics.tweet_count")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Website" Tag="user.entities">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("entities.url.urls[0].expanded_url")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Avatar" Tag="user.profile_image_url">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("profile_image_url").Replace("_normal",string.Empty)
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<Compute Id="Verified" Tag="user.verified">
				<Compute.Expr>
          <![CDATA[
          @FetchToken("verified")
					]]>
        </Compute.Expr>
				<JsonPath Expr="author_id" Id="UserId"/>
			</Compute>
			<JsonPath Expr="source" Id="Source" Tag="tweet.source" DefaultValue=""/>
		</Resource>
    <Resource Id="User">
			<Compute Expr="https://www.twitter.com/@(Model.Inp)/" Id="Url" Title="URL">
				<JsonPath Expr="username" Id="Inp" Tag="user.username" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="id" Id="Id" Title="User Id" Tag="user.id" Converter="String"/>
			<JsonPath Expr="username" Id="Username" Tag="user.username"/>
			<JsonPath Expr="name" Id="Name" Tag="user.name"/>
			<JsonPath Expr="public_metrics.followers_count" Tag="user.public_metrics" Id="Followers" Converter="Int"/>
			<JsonPath Expr="public_metrics.following_count" Tag="user.public_metrics" Id="Following" Converter="Int"/>
			<JsonPath Expr="public_metrics.tweet_count" Tag="user.public_metrics" Id="Tweets" Converter="Int"/>
			<JsonPath Expr="public_metrics.listed_count" Tag="user.public_metrics" Id="Lists" Converter="Int"/>
			<JsonPath Expr="description" Id="Description" Tag="user.description" DefaultValue=""/>
			<JsonPath Expr="location" Id="Location" Tag="user.location" DefaultValue=""/>
			<JsonPath Expr="created_at" Id="CreatedAt" Tag="user.created_at" Converter="DateTime"/>
			<JsonPath Expr="entities.url.urls[0].expanded_url" Tag="user.entities" Id="Website"/>
			<Compute Expr="@Model.Inp.Replace(&quot;_normal&quot;,string.Empty)" Id="Avatar" Tag="user.profile_image_url">
				<JsonPath Expr="profile_image_url" Id="Inp" DefaultValue=""/>
			</Compute>
			<JsonPath Expr="verified" Id="Verified" Tag="user.verified" Converter="Bool"/>
		</Resource>
  </Resources>

  <RestConnector Id="TweetsLookup" Title="Tweets Lookup" Group="Tweets" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference">
    <Parameters>
      <Text Id="Ids" Title="Tweet URLs or Ids (One per row)" Multiline="true" Debug.DefaultValue="1088844064236228608" Required="true"/>
			<Checkbox Id="IncludeRtEng" Title="Include Engagement from Retweets" DefaultValue="true" HelpText="If false, sets retweet count to 0 for all retweets"/>
    </Parameters>
    <Batch Parameter="Ids" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
				https://api.twitter.com/2/tweets?ids=@FetchTweetString()
				&expansions=author_id,entities.mentions.username
				&tweet.fields=@(SelectedTweetFields())
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<Resource Id="Tweet"/>
			</JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="TweetSearch" Title="Tweets Search" Group="Tweets" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true" Debug.DefaultValue="obama" HelpUrl="https://dev.twitter.com/rest/public/search"/>
			<Checkbox Id="IncludeRtEng" Title="Include Engagement from Retweets" DefaultValue="true" HelpText="If false, sets retweet count to 0 for all retweets"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="false">
      <Parse>
        <JsonPath Expr="$.meta.next_token" Id="NextResults"/>
      </Parse>
    </Paging>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/tweets/search/recent
				?query=@Utils.UrlEncode(Model.Query)
				&max_results=@Model.PageCursor.NextTake
        @(Model.PageCursor.Page != 0 ? "&next_token=" +  Model.NextResults : "")
				&expansions=author_id,entities.mentions.username
				&tweet.fields=@SelectedTweetFields()
				@SelectedUserFields()
				]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<Resource Id="Tweet"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UsersLookup" Title="Users Lookup" Group="Users" HelpUrl="https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by">
    <Parameters>
      <Text Id="Usernames" Title="Usernames (One per row)" Debug.DefaultValue="zaralarsson" Multiline="true" Required="true"/>
    </Parameters>
    <Batch Parameter="Usernames" Separator="\n" ItemsPerBatch="100"/>
    <Fetch>
			<Resource Id="HttpSettings"/>
      <Fetch.Url>
        <![CDATA[
        https://api.twitter.com/2/users/by
				?usernames=@FetchUserString()
				@SelectedUserFields()
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="data[*]">
				<Resource Id="User"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
		string SelectedUserFields() {
			string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
			string csv = string.Join(",",((ResultField[])Model.Headers)
				.Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower()) && e.Tag.StartsWith("user."))
				.Select(e => e.Tag.Replace("user.",string.Empty)).Distinct().ToArray());
			return csv.Length > 0 ? "&user.fields=" + csv : string.Empty;
		}

		string SelectedTweetFields() {
			string[] fields = ((string)Model.Fields).Split(',').Select(e => e.Trim().ToLower()).ToArray();
			return "author_id,text," + string.Join(",",((ResultField[])Model.Headers)
				.Where(e => !string.IsNullOrEmpty(e.Tag) && fields.Contains(e.Identifier.ToLower()) && e.Tag.StartsWith("tweet."))
				.Select(e => e.Tag.Replace("tweet.",string.Empty)).Distinct().ToArray());
		}

    string FetchUserString() {
			string[] lines = ((string)Model.Usernames).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).ToArray();
      return string.Join(",",lines.Select(e => Regex.Replace(e, @"^@", string.Empty)).ToArray());
    }

    string FetchTweetString() {
			string[] lines = ((string)Model.Ids).Trim().Split('\n').Select(e => e.Trim()).Where(e => !string.IsNullOrEmpty(e)).ToArray();
      return string.Join(",",lines.Select(e => Regex.Replace(e, @"(\w*)\/status", string.Empty)).Select((e, i) => Regex.Replace(e, @"[^\d]", string.Empty)).ToArray());
    }

		string FetchToken(string jsonPath) {
			string filter = "includes.users[?(@.id=='" + Model.UserId + "')].id";
			IEnumerable<JToken> matches = JObject.Parse(Model.FetchedResult.Body).SelectTokens(filter);
			return matches.First().ToString();
		}

		string GetTweetType(string txt) {
			if(txt.StartsWith("RT @"))
			{
				return "Retweet";
			}
			if(txt.StartsWith("@"))
			{
				return "Reply";
			}
			return "Tweet";
		}

		long AdjustEngagement(string txt) {
			return (!Model.IncludeRtEng && GetTweetType(txt) == "Retweet") ? 0 : Model.Inp;
		}
    ]]>
  </RazorFunctions>

</Suite>