<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Html/Css To Image" Id="HtmlCssToImage" Category="Design" RequireVersion="7.0" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/HtmlCssToImage.xml" HelpUrl="https://seotoolsforexcel.com/htmlcss-to-images/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity" />

  <Settings HelpText="What's this?" HelpUrl="https://seotoolsforexcel.com/htmlcss-to-images/">
    <Text Id="UserId" Title="User Id" Required="true"/>
    <Text Id="ApiKey" Title="Api Key" Required="true"/>
  </Settings>

  <Resources>
    <Resource Id="HeaderMethods">
			<RequestMethod>POST</RequestMethod>
			<RequestContentType>application/json</RequestContentType>
			<RequestHeaders>
				<Header Name='Authorization'>Basic @(CreateBasicAuth())</Header>
			</RequestHeaders>
    </Resource>
    <Resource Id="Fail">
			<Fail>
				<JsonPath Expr="message"/>
			</Fail>
    </Resource>
  </Resources>

  <RestConnector Id="HtmlCssToImage" Title="Html/Css To Image" HelpUrl="https://docs.htmlcsstoimage.com/getting-started/creating-an-image">
    <Parameters>
      <Text Id="Html" Title="HTML" Required="true" Debug.DefaultValue="&lt;div class=&#39;ping&#39;&gt;Pong&lt;/div&gt;" Multiline="true"/>
      <Text Id="Css" Title="CSS" Required="false" Debug.DefaultValue=".ping {padding: 20px; font-family:'sans-serif';}" Multiline="true"/>
      <Text Id="GoogleFonts" Title="Google Fonts (Optional)" Required="false" Debug.DefaultValue="" HelpText="Google fonts to be loaded. Example: Roboto. Multiple fonts delimited by |. Roboto|Open Sans"/>
    </Parameters>
    <Fetch>
      <HttpSettings>
				<Resource Id="HeaderMethods"/>
        <RequestBody>
					<![CDATA[
							@{
							var dict = new Dictionary<string, object>();
							dict.Add("html", Model.Html);
							dict.Add("css",Model.Css);
							if(!string.IsNullOrEmpty(Model.GoogleFonts))
								dict.Add("google_fonts",Model.GoogleFonts);
							var output = Newtonsoft.Json.JsonConvert.SerializeObject(dict);
							}
							@output
					]]>
        </RequestBody>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
          https://hcti.io/v1/image
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
			<JsonPath Expr="url" Id="Url"/>
    </Parse>
		<Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
			string CreateBasicAuth() {
				return Convert.ToBase64String(ASCIIEncoding.ASCII.GetBytes(Model.UserId + ":" + Model.ApiKey));
			}
    ]]>
  </RazorFunctions>

</Suite>